void abc<U, V>() where U : struct, IFoo where V : IFoo<U> {}
delegate void F<U>(U u) where U : class, IFoo<Bar>;
class Foo<T> where T : IFoo<int> {}

----------------------------------------------------

[
	["keyword", "void"],
	["generic-method", [
		["function", "abc"],
		["punctuation", "<"],
		["class-name", ["U"]],
		["punctuation", ","],
		["class-name", ["V"]],
		["punctuation", ">"]
	]],
	["punctuation", "("],
	["punctuation", ")"],
	["keyword", "where"],
	["class-name", "U"],
	["punctuation", ":"],
	["type-list", [
		["keyword", "struct"],
		["punctuation", ","],
		["class-name", ["IFoo"]]
	]],
	["keyword", "where"],
	["class-name", "V"],
	["punctuation", ":"],
	["type-list", [
		["class-name", ["IFoo"]],
		["punctuation", "<"],
		["class-name", ["U"]],
		["punctuation", ">"]
	]],
	["punctuation", "{"],
	["punctuation", "}"],

	["keyword", "delegate"],
	["keyword", "void"],
	["generic-method", [
		["function", "F"],
		["punctuation", "<"],
		["class-name", ["U"]],
		["punctuation", ">"]
	]],
	["punctuation", "("],
	["identifier-type", [
		["class-name", ["U"]]
	]],
	" u",
	["punctuation", ")"],
	["keyword", "where"],
	["class-name", "U"],
	["punctuation", ":"],
	["type-list", [
		["keyword", "class"],
		["punctuation", ","],
		["class-name", ["IFoo"]],
		["punctuation", "<"],
		["class-name", ["Bar"]],
		["punctuation", ">"]
	]],
	["punctuation", ";"],

	["keyword", "class"],
	["class-name", [
		"Foo",
		["punctuation", "<"],
		"T",
		["punctuation", ">"]
	]],
	["keyword", "where"],
	["class-name", "T"],
	["punctuation", ":"],
	["type-list", [
		["class-name", ["IFoo"]],
		["punctuation", "<"],
		["keyword", "int"],
		["punctuation", ">"]
	]],
	["punctuation", "{"],
	["punctuation", "}"]
]


----------------------------------------------------

Checks for class names and keywords in generic constraints.
