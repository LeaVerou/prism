{ foo: … }
{ 'foo': … }
{ "foo": … }
{ `foo`: … }
{ ´foo´: … }

// not a property
LET opType = IS_NULL(OLD) ? "insert" : "update"

LET foo = { to: 5, search: 6, options: 7 }
LET bar = foo.search + foo[options] + foo["to"]

----------------------------------------------------

[
	["punctuation", "{"],
	["property", "foo"],
	["punctuation", ":"],
	" … ",
	["punctuation", "}"],
	["punctuation", "{"],
	["property", "'foo'"],
	["punctuation", ":"],
	" … ",
	["punctuation", "}"],
	["punctuation", "{"],
	["property", "\"foo\""],
	["punctuation", ":"],
	" … ",
	["punctuation", "}"],
	["punctuation", "{"],
	["property", "`foo`"],
	["punctuation", ":"],
	" … ",
	["punctuation", "}"],
	["punctuation", "{"],
	["property", "´foo´"],
	["punctuation", ":"],
	" … ",
	["punctuation", "}"],

	["comment", "// not a property"],
	["keyword", "LET"],
	" opType ",
	["operator", "="],
	["function", "IS_NULL"],
	["punctuation", "("],
	["keyword", "OLD"],
	["punctuation", ")"],
	["punctuation", "?"],
	["string", "\"insert\""],
	["punctuation", ":"],
	["string", "\"update\""],

	["keyword", "LET"],
	" foo ",
	["operator", "="],
	["punctuation", "{"],
	["property", "to"],
	["punctuation", ":"],
	["number", "5"],
	["punctuation", ","],
	["property", "search"],
	["punctuation", ":"],
	["number", "6"],
	["punctuation", ","],
	["property", "options"],
	["punctuation", ":"],
	["number", "7"],
	["punctuation", "}"],
	["keyword", "LET"],
	" bar ",
	["operator", "="],
	" foo",
	["punctuation", "."],
	"search ",
	["operator", "+"],
	" foo",
	["punctuation", "["],
	"options",
	["punctuation", "]"],
	["operator", "+"],
	" foo",
	["punctuation", "["],
	["string", "\"to\""],
	["punctuation", "]"]
]

----------------------------------------------------

Checks for properties. (beware of ternary operators)
