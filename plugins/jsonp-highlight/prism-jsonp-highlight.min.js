!function(){if("undefined"!=typeof Prism&&"undefined"!=typeof document){var t=[];u((function(t){if(t&&t.meta&&t.data){if(t.meta.status&&t.meta.status>=400)return"Error: "+(t.data.message||t.meta.status);if("string"==typeof t.data.content)return"function"==typeof atob?atob(t.data.content.replace(/\s/g,"")):"Your browser cannot decode base64"}return null}),"github"),u((function(t,e){if(t&&t.meta&&t.data&&t.data.files){if(t.meta.status&&t.meta.status>=400)return"Error: "+(t.data.message||t.meta.status);var n=t.data.files,a=e.getAttribute("data-filename");if(null==a)for(var r in n)if(n.hasOwnProperty(r)){a=r;break}return void 0!==n[a]?n[a].content:"Error: unknown or missing gist file "+a}return null}),"gist"),u((function(t){return t&&t.node&&"string"==typeof t.data?t.data:null}),"bitbucket");var e=0,n="data-jsonp-status",a="loading",r="loaded",i="failed",o='pre[data-jsonp]:not([data-jsonp-status="loaded"]):not([data-jsonp-status="loading"])';Prism.hooks.add("before-highlightall",(function(t){t.selector+=", "+o})),Prism.hooks.add("before-sanity-check",(function(u){var s,d=u.element;if(d.matches(o)){u.code="",d.setAttribute(n,a);var l=d.appendChild(document.createElement("CODE"));l.textContent="Loading…";var f=u.language;l.className="language-"+f;var c=Prism.plugins.autoloader;c&&c.loadLanguages(f);var p=d.getAttribute("data-adapter"),m=null;if(p){if("function"!=typeof window[p])return d.setAttribute(n,i),void(l.textContent=(s=p,'✖ Error: JSONP adapter function "'+s+"\" doesn't exist"));m=window[p]}var g="prismjsonp"+e++,h=document.createElement("a"),v=h.href=d.getAttribute("data-jsonp");h.href+=(h.search?"&":"?")+(d.getAttribute("data-callback")||"callback")+"="+g;var b=setTimeout((function(){d.setAttribute(n,i),l.textContent="✖ Error: Timeout loading "+v}),Prism.plugins.jsonphighlight.timeout),y=document.createElement("script");y.src=h.href,window[g]=function(e){document.head.removeChild(y),clearTimeout(b),delete window[g];var a=null;if(m)a=m(e,d);else for(var o=0,u=t.length;o<u&&null===(a=t[o].adapter(e,d));o++);null===a?(d.setAttribute(n,i),l.textContent="✖ Error: Cannot parse response (perhaps you need an adapter function?)"):(d.setAttribute(n,r),l.textContent=a,Prism.highlightElement(l))},document.head.appendChild(y)}})),Prism.plugins.jsonphighlight={timeout:5e3,registerAdapter:u,removeAdapter:function(e){if("string"==typeof e&&(e=s(e)),"function"==typeof e){var n=t.findIndex((function(t){return t.adapter===e}));n>=0&&t.splice(n,1)}},highlight:function(t){for(var e,n=(t||document).querySelectorAll(o),a=0;e=n[a++];)Prism.highlightElement(e)}}}function u(e,n){n=n||e.name,"function"!=typeof e||s(e)||s(n)||t.push({adapter:e,name:n})}function s(e){if("function"==typeof e){for(var n=0;a=t[n++];)if(a.adapter.valueOf()===e.valueOf())return a.adapter}else if("string"==typeof e){var a;for(n=0;a=t[n++];)if(a.name===e)return a.adapter}return null}}();