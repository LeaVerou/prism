!function(){if("undefined"!=typeof self&&self.Prism&&self.document){var d=[];n(function(n,r){if(n&&n.meta&&n.data){if(n.meta.status&&400<=n.meta.status)return"Error: "+(n.data.message||n.meta.status);if("string"==typeof n.data.content)return"function"==typeof atob?atob(n.data.content.replace(/\s/g,"")):"Your browser cannot decode base64"}return null},"github"),n(function(n,r){if(n&&n.meta&&n.data&&n.data.files){if(n.meta.status&&400<=n.meta.status)return"Error: "+(n.data.message||n.meta.status);var t=n.data.files,e=r.getAttribute("data-filename");if(null==e)for(var o in t)if(t.hasOwnProperty(o)){e=o;break}return void 0!==t[e]?t[e].content:"Error: unknown or missing gist file "+e}return null},"gist"),n(function(n,r){return n&&n.node&&"string"==typeof n.data?n.data:null},"bitbucket");var p=0,m="data-jsonp-status",v="loading",g="loaded",b="failed",y="pre[data-jsonp]:not(["+m+'="'+g+'"]):not(['+m+'="'+v+'"])';Prism.hooks.add("before-highlightall",function(n){n.selector+=", "+y}),Prism.hooks.add("before-sanity-check",function(n){var o=n.element;if(o.matches(y)){n.code="",o.setAttribute(m,v);var i=o.appendChild(document.createElement("CODE"));i.textContent="Loading…";var r=n.language;i.className="language-"+r;var t=Prism.plugins.autoloader;t&&t.loadLanguages(r);var e=o.getAttribute("data-adapter"),a=null;if(e){if("function"!=typeof window[e])return o.setAttribute(m,b),void(i.textContent='✖ Error: JSONP adapter function "'+e+"\" doesn't exist");a=window[e]}var f="prismjsonp"+p++,u=document.createElement("a"),l=u.href=o.getAttribute("data-jsonp");u.href+=(u.search?"&":"?")+(o.getAttribute("data-callback")||"callback")+"="+f;var s=setTimeout(function(){o.setAttribute(m,b),i.textContent="✖ Error: Timeout loading "+l},Prism.plugins.jsonphighlight.timeout),c=document.createElement("script");c.src=u.href,window[f]=function(n){document.head.removeChild(c),clearTimeout(s),delete window[f];var r=null;if(a)r=a(n,o);else for(var t=0,e=d.length;t<e&&null===(r=d[t].adapter(n,o));t++);null===r?(o.setAttribute(m,b),i.textContent="✖ Error: Cannot parse response (perhaps you need an adapter function?)"):(o.setAttribute(m,g),i.textContent=r,Prism.highlightElement(i))},document.head.appendChild(c)}}),Prism.plugins.jsonphighlight={timeout:5e3,registerAdapter:n,removeAdapter:function(r){if("string"==typeof r&&(r=t(r)),"function"==typeof r){var n=d.findIndex(function(n){return n.adapter===r});0<=n&&d.splice(n,1)}},highlight:function(n){for(var r,t=(n||document).querySelectorAll(y),e=0;r=t[e++];)Prism.highlightElement(r)}}}function n(n,r){r=r||n.name,"function"!=typeof n||t(n)||t(r)||d.push({adapter:n,name:r})}function t(n){if("function"==typeof n){for(var r=0;t=d[r++];)if(t.adapter.valueOf()===n.valueOf())return t.adapter}else if("string"==typeof n){var t;for(r=0;t=d[r++];)if(t.name===n)return t.adapter}return null}}();