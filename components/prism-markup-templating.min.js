Prism.languages["markup-templating"]={},Object.defineProperties(Prism.languages["markup-templating"],{buildPlaceholders:{value:function(n,a,e,r){n.language===a&&(n.tokenStack=[],n.code=n.code.replace(e,function(e){if("function"==typeof r&&!r(e))return e;for(var t=n.tokenStack.length;-1!==n.code.indexOf("___"+a.toUpperCase()+t+"___");)++t;return n.tokenStack[t]=e,"___"+a.toUpperCase()+t+"___"}),n.grammar=Prism.languages.markup)}},tokenizePlaceholders:{value:function(p,f){if(p.language===f&&p.tokenStack){p.grammar=Prism.languages[f];var u=0,_=Object.keys(p.tokenStack),k=function(e){if(!(u>=_.length))for(var t=0;t<e.length;t++){var n=e[t];if("string"==typeof n||n.content&&"string"==typeof n.content){var a=_[u],r=p.tokenStack[a],o="string"==typeof n?n:n.content,i=o.indexOf("___"+f.toUpperCase()+a+"___");if(-1<i){++u;var g,c=o.substring(0,i),s=new Prism.Token(f,Prism.tokenize(r,p.grammar,f),"language-"+f,r),l=o.substring(i+("___"+f.toUpperCase()+a+"___").length);if(c||l?(g=[c,s,l].filter(function(e){return!!e}),k(g)):g=s,"string"==typeof n?Array.prototype.splice.apply(e,[t,1].concat(g)):n.content=g,u>=_.length)break}}else n.content&&"string"!=typeof n.content&&k(n.content)}};k(p.tokens)}}}});