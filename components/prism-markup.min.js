Prism.languages.markup={comment:/<!--[\s\S]*?-->/,prolog:/<\?[\s\S]+?\?>/,doctype:{pattern:/<!DOCTYPE(?:[^>"'[\]]|"[^"]*"|'[^']*')+(?:\[(?:[^<"'\]]|"[^"]*"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\]\s*)?>/i,greedy:!0,inside:{"internal-subset":{pattern:/(\[)[\s\S]+(?=\]>$)/,lookbehind:!0,greedy:!0,inside:null},string:{pattern:/"[^"]*"|'[^']*'/,greedy:!0},punctuation:/^<!|>$|[[\]]/,"doctype-tag":/^DOCTYPE/,name:/[^\s<>'"]+/}},cdata:/<!\[CDATA\[[\s\S]*?]]>/i,tag:{pattern:/<\/?(?!\d)[^\s>\/=$<%]+(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))|(?=[\s/>])))+)?\s*\/?>/,greedy:!0,inside:{tag:{pattern:/^<\/?[^\s>\/]+/,inside:{punctuation:/^<\/?/,namespace:/^[^\s>\/:]+:/}},"attr-value":{pattern:/=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+)/,inside:{punctuation:[{pattern:/^=/,alias:"attr-equals"},/"|'/]}},punctuation:/\/?>/,"attr-name":{pattern:/[^\s>\/]+/,inside:{namespace:/^[^\s>\/:]+:/}}}},entity:[{pattern:/&[\da-z]{1,8};/i,alias:"named-entity"},/&#x?[\da-f]{1,8};/i]},Prism.languages.markup.tag.inside["attr-value"].inside.entity=Prism.languages.markup.entity,Prism.languages.markup.doctype.inside["internal-subset"].inside=Prism.languages.markup,Prism.hooks.add("wrap",function(a){"entity"===a.type&&(a.attributes.title=a.content.replace(/&amp;/,"&"))}),Object.defineProperty(Prism.languages.markup.tag,"addInlined",{value:function(a,s,e,n){var i={};i["language-"+s]={pattern:/(^<!\[CDATA\[)[\s\S]+?(?=\]\]>$)/i,lookbehind:!0,inside:Prism.languages[s]},i.cdata=/^<!\[CDATA\[|\]\]>$/i;var r={"included-cdata":{pattern:/<!\[CDATA\[[\s\S]*?\]\]>/i,inside:i}};function t(a,e){return a.replace(/<(\w+)>/g,function(a,s){return"(?:"+e[s]+")"})}r["language-"+s]={pattern:/[\s\S]+/,inside:Prism.languages[s]};var u="[^\\s>/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>]))",g=t("(?:\\s*<ATTR>)+",{ATTR:u}),l=t("<<TAG>(?:\\s<LOOP>)?\\s*>",{TAG:a,LOOP:g}),m=t("</<TAG>>",{TAG:a});if(e&&0<e.length){for(var p="",d=0;o=e[d++];)o.optional||(p+=t("(?=<LOOP>?\\s*<N>\\s*=)",{LOOP:g,N:o.name.source}));var o,P=[t("(?!<NAMES>[\\s/>=])<ATTR>",{ATTR:u,NAMES:e.map(function(a){return a.name.source}).join("|")})];for(d=0;o=e[d++];){var A=t("<NAME>\\s*=\\s*(?:\"(?=<VALUE>\")[^\"]*\"|'(?=<VALUE>')[^']*'|(?=<VALUE>[\\s>])[^\\s'\">=]+(?=[\\s>]))",{NAME:o.name.source,VALUE:o.value.source});P.push(A)}var c=t("(?:\\s*<ATTR>)+",{ATTR:P.join("|")});l=p?t("<<TAG>\\s<REQ><LOOP>\\s*>",{TAG:a,REQ:p,LOOP:c}):t("<<TAG>(?:\\s<LOOP>)?\\s*>",{TAG:a,LOOP:c})}var T={pattern:RegExp("("+l+")(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[^])*?(?="+m+")","i"),lookbehind:!0,greedy:!0,inside:r},O=n?Array.isArray(n)?n:[n]:[],y=Prism.languages.markup[a];if(y){var k=y.findIndex(function(s){return O.some(function(a){return"language-"+a in s.inside})});-1===k?y.push(T):y.splice(k,0,T)}else{var v={};v[a]=[T],Prism.languages.insertBefore("markup","cdata",v)}}}),Prism.languages.html=Prism.languages.markup,Prism.languages.mathml=Prism.languages.markup,Prism.languages.svg=Prism.languages.markup,Prism.languages.xml=Prism.languages.extend("markup",{}),Prism.languages.ssml=Prism.languages.xml,Prism.languages.atom=Prism.languages.xml,Prism.languages.rss=Prism.languages.xml,Prism.languages.markup.tag.addInlined("script","none",[{name:/type/,value:/text\/plain/}]);